{"version":3,"sources":["../src/cubism_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","rendering","tinycolor","CubismChartCtrl","$scope","$injector","$rootScope","data","seriesNames","defaultBands","negative","rgb","positive","panelDefaults","links","datasource","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","fontSize","seriesOverrides","defaults","panel","legend","events","on","onDataReceived","bind","onDataError","onInitEditMode","self","addEditorTab","unitFormats","getUnitFormats","override","subItem","value","render","series","color","alias","dataList","map","target","seriesOverides","undefined","push","defaultSeriesOverride","summaryType","extent","low","high","height","bands","colors","cloneDeep","adjustColorBands","which","colorArray","reverse","length","splice","i","unshift","darken","toRgbString","defaultColor","index","found","find","pattern","substring","re","RegExp","test","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"cubism_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport rendering from './rendering';\nimport tinycolor from './tinycolor2/tinycolor';\n\nexport class CubismChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.data = [];\n    this.seriesNames = [];\n    this.defaultBands = [\n      {\n        negative: [{rgb: \"rgb(8,81,156)\"}, {rgb: \"rgb(49,130,189)\"}, {rgb: \"rgb(107,174,214)\"}, {rgb: \"rgb(189,215,231)\"}],\n        positive: [{rgb: \"rgb(186,228,179)\"}, {rgb: \"rgb(116,196,118)\"}, {rgb: \"rgb(49,163,84)\"}, {rgb: \"rgb(0,109,44)\"}]\n      },\n      {\n        negative: [{rgb: \"rgb(8,81,156)\"}, {rgb: \"rgb(49,130,189)\"}, {rgb: \"rgb(107,174,214)\"}, {rgb: \"rgb(189,215,231)\"}],\n        positive: [{rgb: \"#bae4b3\"}, {rgb: \"#ffff00\"}, {rgb: \"#ff8000\"}, {rgb: \"#ff0000\"}]\n      },\n      {\n        negative: [{rgb: \"rgb(8,81,156)\"}, {rgb: \"rgb(49,130,189)\"}, {rgb: \"rgb(107,174,214)\"}, {rgb: \"rgb(189,215,231)\"}],\n        positive: [{rgb: \"rgb(255, 198, 198)\"}, {rgb: \"rgb(255, 147, 147)\"}, {rgb: \"rgb(255, 96, 96)\"}, {rgb: \"rgb(255, 45, 45)\"}]\n      }\n    ];\n\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      fontSize: '80%',\n      seriesOverrides: []\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  getSeriesNames(self) {\n    if (self.seriesNames) {\n      return self.seriesNames;\n    } else {\n      return [];\n    }\n  };\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-cubism-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(override, subItem) {\n    override.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    this.data = dataList;\n    this.seriesNames = dataList\n      .map(function (series) {\n        return series.alias || series.target;\n      });\n    this.render(this.data);\n  }\n\n  addSeriesOverride() {\n    if (this.panel.seriesOverides == null || this.panel.seriesOverides == undefined) {\n      this.panel.seriesOverides = [];\n    }\n    this.panel.seriesOverides.push(this.defaultSeriesOverride());\n  }\n\n  defaultSeriesOverride() {\n    return {\n      alias: \"\",\n      summaryType: \"average\",\n      extent: {\n        low: null,\n        high: null\n      },\n      format: \"short\",\n      height: 30,\n      bands: 4,\n      colors: _.cloneDeep(this.defaultBands[0])\n    };\n  }\n\n  bandsChange(override) {\n    if (override.bands > 0 && override.bands <= 10) {\n      this.adjustColorBands(\"-\", override.bands, override.colors.negative);\n      this.adjustColorBands(\"+\", override.bands, override.colors.positive);\n    }\n    this.render();\n  }\n\n  adjustColorBands(which, bands, colorArray) {\n    if (which == \"+\") {\n      colorArray.reverse();\n    }\n    if (colorArray.length > bands) {\n      colorArray.splice(0, colorArray.length - bands)\n    } else if (colorArray.length < bands) {\n      for (var i = 0; i < (bands - colorArray.length); i++) {\n        colorArray.unshift({rgb: tinycolor(colorArray[0].rgb).darken(10).toRgbString()});\n      }\n    }\n    if (which == \"+\") {\n      colorArray.reverse();\n    }\n  }\n\n  setBandsWith(override, defaultColor) {\n    override.bands = defaultColor.positive.length;\n    override.colors = _.cloneDeep(defaultColor);\n  }\n\n  removeSeriesOverride(index) {\n    this.panel.seriesOverides.splice(index, 1);\n    this.render();\n  }\n\n  getMatchingSeriesOverride(series) {\n    var target = series.alias || series.target;\n    var found = _.find(\n      this.panel.seriesOverides,\n      function (override) {\n        if (override.alias && override.alias.length > 0) {\n          if (override.alias[0] == \"/\" && override.alias[override.alias.length - 1] == \"/\") {\n            var pattern = override.alias.substring(1,override.alias.length - 1);\n            var re = new RegExp(pattern);\n            return re.test(target);\n          } else {\n            return override.alias == target;\n          }\n        }\n      }\n    );\n    return found || this.defaultSeriesOverride();\n  }\n\n  //noinspection JSMethodCanBeStatic\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n}\n\nCubismChartCtrl.templateUrl = 'module.html';\n"]}